// J2.L.P0006 - My Text Editor (MTE)

import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author SE130460
 */
public class FindDialog extends javax.swing.JDialog
{
    public FindDialog(java.awt.Frame parent, boolean modal)
    {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        setTitle("Find");
        btnFindNext.setEnabled(false);    // Ko cần set ở đây. Chỉ cần bắt sự kiện ở ô nhập là đc rồi
//        txtFind.setFocusCycleRoot(true);  // Cái này là sao nhỉ?
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnFindNext = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        txtFind = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setFocusTraversalPolicyProvider(true);

        jLabel1.setText("Find what:");

        btnFindNext.setText("Find Next");
        btnFindNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindNextActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        txtFind.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFindKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(txtFind, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnCancel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnFindNext))
                .addContainerGap(50, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(btnFindNext)
                    .addComponent(txtFind, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCancel)
                .addContainerGap(37, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private boolean search(String text,char keyword,int start,int end)
    {
        for(int i=start;i<=end;i++)
            if(text.charAt(i)==keyword)
              return true;
        return false;
    }
    private void btnFindNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindNextActionPerformed
//        if (!txtFind.getText().isEmpty())   // Phải nhập gì đó vào ô tìm kiếm rồi thì mới cho tìm
//        {   // Tại sao ko đánh đc chữ trong ô txtFind? --> Trả lời: Nó bị lung tung gì mấy chỗ Focus ấy. Kệ đi!
            String keyword = txtFind.getText();
            MyTextEditor parent = (MyTextEditor) this.getParent();    // Đứng trên cửa sổ con, gọi cửa sổ cha
            String parentText = parent.txtContent.getText();
            int fromIndex = 0;  // Vtrí bắt đầu tìm
            String selectedText = parent.txtContent.getSelectedText();

            if (selectedText != null)   // Văn bản đã đc chọn trước đó
            {
                fromIndex = parent.txtContent.getSelectionEnd();  // Vtrí ngay sau chữ vừa đc chọn <=> vị trí bắt đầu tìm tiếp
            }
            int posFound = parentText.indexOf(keyword, fromIndex);  // Tìm keyword từ vtrí index, kết quả vtrí tìm thấy trả về result
            if (posFound >= 0)
            {
//                for (int row = 1; row < 5; row++) // 5 chỉ là con số để chạy thử thôi
//                {
                    if(search(parentText, '\n', fromIndex, posFound) == true)
                        posFound -= /*row * 2*/1;    // Chỗ này cứ sau mỗi 1 lần phải trừ 2, 4, 6, 8,... chứ ko trừ cố định 1 con
                    parent.txtContent.select(posFound, posFound + keyword.length());    // số 2 đc.
//                }
            }
            else
                JOptionPane.showMessageDialog(this, "Cannot find \"" + keyword + "\"");
//        }     // Để đây là sai logic rồi. Đã disable thì sao bấm đc nút nữa mà check...
    }//GEN-LAST:event_btnFindNextActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void txtFindKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFindKeyReleased
        if (txtFind.getText().isEmpty())    // Ko có gì trong ô thì ẩn nút đi, ko cho tìm
            btnFindNext.setEnabled(false);
        else       // Phải nhập gì đó vào ô tìm kiếm rồi thì mới cho tìm
            btnFindNext.setEnabled(true);
    }//GEN-LAST:event_txtFindKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FindDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FindDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FindDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FindDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FindDialog dialog = new FindDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnFindNext;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField txtFind;
    // End of variables declaration//GEN-END:variables
}